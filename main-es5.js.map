{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/admin-auth-guard.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/service.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","p","PanelModule","canActivate","LandingModule","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","AuthSer","route","router","user$","subscribe","user","returnUrl","localStorage","getItem","removeItem","navigateByUrl","AppUser$","appUser","unsubscribe","logout","navigate","relativeTo","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","LoginComponent","authSer","userServ","loginMode","signUpMode","signErrorMessage","loginErrorMessage","form","data","value","signup","error","message","login","email","password","AdminAuthGuardService","pipe","isAdmin","providedIn","AuthGuardService","authServ","state","queryParams","url","AuthService","afAuth","db","UService","authState","auth","createUserWithEmailAndPassword","userCreate","newUser","updateProfile","displayName","username","inserUserData","database","ref","uid","set","snapshot","queryParamMap","get","setItem","signInWithEmailAndPassword","signOut","getUser","valueChanges","ServiceService","https","urlPosts","urlComments","newPost","post","put","newComment","UserService","object","list","snapshotChanges","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AdminAuthGuardService } from './services/admin-auth-guard.service';\n\nconst routes: Routes = [\n {path:'panel',\n loadChildren:()=>import('./panel/panel.module').then(p => p.PanelModule),canActivate:[AuthGuardService, AdminAuthGuardService]},\n {path:'landing',\n loadChildren:()=>import('./landing/landing.module').then(p => p.LandingModule)},\n {path: 'login', component:LoginComponent},\n {path: '', redirectTo: 'landing', pathMatch: 'full'},\n {path: ':anything', redirectTo: 'landing', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n  <div class=\"container\">\n  <a class=\"navbar-brand\" routerLink=\"/\">OverrideEG</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n   \n    <ul class=\"navbar-nav  ml-auto\">\n      <ng-template #anonymous>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"/login\"><i class=\"fa fa-power-off\"> </i> LOGIN</a>\n        </li>\n      </ng-template>\n    <li class=\"nav-item dropdown\" *ngIf=\"appUser else anonymous\" routerLinkActive=\"active\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          {{appUser.username}}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" routerLink=\"/panel\" *ngIf=\"appUser.isAdmin\">Dashboard</a>\n          <a class=\"dropdown-item\" (click)=\"logout()\">LogOut</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n</nav>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { appUsers } from './interfaces/user.interface';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  appUser:appUsers;\n  subscribe :Subscription;\n    constructor( private AuthSer:AuthService,private route:ActivatedRoute,\n      private router:Router) {\n        this.AuthSer.user$.subscribe(\n          user=>{\n            if(user){\n              let returnUrl= localStorage.getItem('returnUrl');\n              if(!returnUrl) return;\n              localStorage.removeItem('returnUrl');\n              router.navigateByUrl(returnUrl);\n            }\n          }\n        )\n      AuthSer.AppUser$.subscribe(user=>this.appUser=user);\n     }\n  \n   async ngOnInit() {\n    }\n  \n   \n\n  \n  \n\n  \n    ngOnDestroy(){\n      this.subscribe.unsubscribe();\n    }\n  \n    logout(){\n     this.AuthSer.logout();\n     this.router.navigate(['/landing'],{relativeTo:this.route});\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpParams } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from 'src/environments/environment';\nimport { ServiceService } from './services/service.service';\nimport { AuthService } from './services/auth.service';\nimport { UserService } from './services/user.service';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [\n    ServiceService,\n    AuthService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { appUsers } from '../interfaces/user.interface';\nimport { AuthService } from '../services/auth.service';\nimport { UserService } from '../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginMode = true;\n  signUpMode = false;\n  signErrorMessage: string = '';\n  loginErrorMessage: string = '';\n  constructor(private authSer: AuthService, private userServ: UserService, private router: Router\n    , private route: ActivatedRoute) { }\n\n\n  ngOnInit() {\n  }\n\n\n  signup(form) {\n    let data: appUsers = form.value;\n    this.authSer.signup(data).then().catch(\n      error => {\n        this.signErrorMessage = error.message;\n      }\n    );\n  }\n\n  login(form) {\n    let data = form.value;\n    this.authSer.login(data.email, data.password).then().catch(\n      error => {\n        this.loginErrorMessage = error.message;\n      }\n    )\n  }\n\n  ReSignUp() {\n    this.loginMode = true;\n    this.signUpMode = false;\n\n  }\n  \n  Relogin() {\n    this.signUpMode = true;\n    this.loginMode = false;\n  }\n}\n","\n<div class=\"container\" *ngIf=\"loginMode\"> \n\t<div class=\"d-flex justify-content-center h-100\">\n\t\t<div class=\"card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<h3>Sign In</h3>\n\t\t\t</div>\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<form (ngSubmit)=\"login(log)\" #log=\"ngForm\">\n\t\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fa fa-user\"></i></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"text\" name=\"email\" class=\"form-control\" placeholder=\"Email\"\n\t\t\t\t\t\tngModel #email=\"ngModel\" required email>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"email.touched && email.errors?.required\">Email Is Required</p>\n\t\t\t\t\t<p *ngIf=\"email.touched &&  email.errors?.email\">Wrong Email Format</p>\n\t\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"password\"\n\t\t\t\t\t\tngModel #password=\"ngModel\" required>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"password.touched && password.errors?.required\">Password Is Required </p>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Login\" [disabled]=\"log.invalid\" class=\"btn float-right login_btn\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"loginErrorMessage\">{{loginErrorMessage}}</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"card-footer\">\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\n\t\t\t\t\tDon't have an account? <a (click)=\"Relogin()\">Sign Up</a>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<p>Admin: ahmednour001@gmail.com & password : 123123</p>\n</div>\n\n\n <div class=\"container\" *ngIf=\"signUpMode\">\n\t<div class=\"d-flex justify-content-center h-100\">\n\t\t<div class=\"card \">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<h3>Sign Up</h3>\n\t\t\t</div>\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<form (ngSubmit)=\"signup(f)\" #f=\"ngForm\">\n\t\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fa fa-user\"></i></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"UserName\"\n\t\t\t\t\t\t ngModel  #username=\"ngModel\" required minlength=\"10\" pattern=\"^[a-zA-Z0-9\\_]+\">\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"username.invalid && username.touched\">\n\t\t\t\t\t\t<p *ngIf=\"username.errors?.minlength\">  min Length 10 Your Enter {{username.errors.minlength.actualLength}}</p>\n\t\t\t\t\t\t<p *ngIf=\"username.errors?.required\">UserName Is Required </p>\n\t\t\t\t\t\t<p *ngIf=\"username.errors?.pattern\"> UserName Format Required </p>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fa fa-envelope\"></i></span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<input type=\"email\"  name=\"email\" class=\"form-control\" placeholder=\"Email\"\n\t\t\t\t\t\t ngModel #email=\"ngModel\" required email>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"email.touched && email.errors?.required\">Email Is Required</p>\n\t\t\t\t\t<p *ngIf=\"email.touched &&  email.errors?.email\">Wrong Email Format</p>\n\t\t\t\t\t<div class=\"input-group form-group\">\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"password\"\n\t\t\t\t\t\tngModel #password=\"ngModel\" required minlength=\"6\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"password.touched && password.errors?.required\">Password Is Required </p>\n\t\t\t\t\t<p *ngIf=\"password.touched && password.errors?.minlength\">Password Should Be Length 6+  </p>\n                    <div class=\"input-group form-group\">\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input type=\"password\" name=\"passwordConfirm\" class=\"form-control\" placeholder=\"Confirm Password\"\n\t\t\t\t\t\tngModel #passwordConfirm=\"ngModel\" required minlength=\"6\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"passwordConfirm.touched && passwordConfirm.errors?.required\">Confirm Password Is Required</p>\n\t\t\t\t\t<p *ngIf=\"passwordConfirm.touched && passwordConfirm.value !== password.value \">Passwords Are Not Equal</p>\n\t\t\t\t\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Sign Up\"\n\t\t\t\t\t\t [disabled]=\"f.invalid || passwordConfirm.value !== password.value \" \n\t\t\t\t\t\t class=\"btn float-right login_btn\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<p *ngIf=\"signErrorMessage\">{{signErrorMessage}}</p>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div class=\"card-footer\">\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\n\t\t\t\t\tDo have an account? <a (click)=\"ReSignUp()\">Sign In</a>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuardService {\n\n\n \n  constructor(private AuthSer:AuthService) { }\n\n  canActivate():Observable<boolean>{\n    return this.AuthSer.AppUser$.pipe(map((appUser:any)=>appUser.isAdmin)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n  constructor(private authServ: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  canActivate(route, state) {\n    return this.authServ.user$.pipe(map(user => {\n      if (user) {\n        return true;\n      } else {\n        this.router.navigate(['/login'], {relativeTo: this.route , queryParams: { returnUrl:state.url } });\n        return false;\n      }\n    }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { switchMap } from 'rxjs/operators'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { appUsers } from '../interfaces/user.interface';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user$:Observable<firebase.User>;\n  newUser: any;\n\n  constructor(private afAuth: AngularFireAuth, private db: AngularFireDatabase,\n     private router: Router, private route: ActivatedRoute,private UService:UserService) {\n      this.user$ = afAuth.authState;\n      }\n\n\n  signup(user) {\n    return this.afAuth.auth.createUserWithEmailAndPassword(user.email, user.password).then(\n      userCreate => {\n        this.newUser = user;\n        userCreate.user.updateProfile({\n          displayName: user.username\n        });\n        this.inserUserData(userCreate).then(() => { this.router.navigate(['/'], { relativeTo: this.route }); })\n      })\n  }\n  inserUserData(userCreate: firebase.auth.UserCredential) {\n    return this.db.database.ref('users/' + userCreate.user.uid).set({\n      username: this.newUser.username,\n      email: this.newUser.email,\n      password: this.newUser.password,\n      isAdmin: false\n    })\n  }\n\n\n\n\n  login(email, password) {\n    let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl')||'/';\n    localStorage.setItem('returnUrl',returnUrl);\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n  get AppUser$():Observable<appUsers>{\n    return this.user$.pipe(switchMap(\n        user=>{\n          if(user){\n            return this.UService.getUser(user.uid).valueChanges();\n          }else{\n          return of(null);\n          }\n        }\n  )) \n  } \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  urlPosts=\"https://jsonplaceholder.typicode.com/posts\";\n  urlComments=\"https://jsonplaceholder.typicode.com/comments\";\n  posts:any;\n  \n  constructor( private https :HttpClient) { }\n\n  getValues(){\n   return this.https.get(this.urlPosts);\n  }\n\n  createPost(newPost){\n    return this.https.post(this.urlPosts,newPost);\n   }\n\n   updatePost(id,newPost){\n    return this.https.put(this.urlPosts+'/'+id,newPost);\n   }\n   \n   deletePost(id){\n    return this.https.delete(this.urlPosts+'/'+id);\n   }\n   getCommentsValues(){\n    return this.https.get(this.urlComments);\n   }\n \n   createComment(newComment){\n     return this.https.post(this.urlComments,newComment);\n    }\n \n    updateComment(id,newComment){\n     return this.https.put(this.urlComments+'/'+id,newComment);\n    }\n    \n    deleteComment(id){\n     return this.https.delete(this.urlComments+'/'+id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor( private db:AngularFireDatabase) { }\n\n  getUser(uid:string){\n    return this.db.object('/users/'+uid);\n  }\n  getAll(){\n    return this.db.list('/users').snapshotChanges();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  firebase : {\n    apiKey: \"AIzaSyBYBXH7DBshmuN-KfzoWwqNkb3yMJujtlc\",\n    authDomain: \"overrideeg-2578d.firebaseapp.com\",\n    databaseURL: \"https://overrideeg-2578d.firebaseio.com\",\n    projectId: \"overrideeg-2578d\",\n    storageBucket: \"overrideeg-2578d.appspot.com\",\n    messagingSenderId: \"46532760979\",\n    appId: \"1:46532760979:web:fd5b019f0d968224e50466\",\n    measurementId: \"G-90VR6QTDBT\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}